on:
  push:
    branches: [master]

jobs:
  build-pasopa:
    name: Build PowerApps-Language-Tooling
    strategy:
      matrix:
        os: [windows-latest]
    runs-on: ${{ matrix.os }}
    env:
      DOTNET_NOLOGO: true
      TOOLS_BIN:  ./Tools
    steps:
    
    - name: Install Tools
      shell: pwsh
      run: |
        $toolsDir = "${{ env.TOOLS_BIN }}"
        [Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12
        $sourceNugetExe = "https://dist.nuget.org/win-x86-commandline/latest/nuget.exe"
        $targetNugetExe = ".\nuget.exe"
        Remove-Item $toolsDir -Force -Recurse -ErrorAction Ignore
        Invoke-WebRequest $sourceNugetExe -OutFile $targetNugetExe
        Set-Alias nuget ".\nuget.exe" -Scope Global -Verbose

        ##
        ##Download CoreTools
        ##
        . nuget install  Microsoft.CrmSdk.CoreTools -O $toolsDir
        New-Item $toolsDir\CoreTools -ItemType Directory -Force
        $coreToolsFolder = Get-ChildItem $toolsDir | Where-Object {$_.Name -match 'Microsoft.CrmSdk.CoreTools.'}
        Move-Item "$($coreToolsFolder.FullName)\content\bin\coretools\*" -Destination "$toolsDir\CoreTools" -Force
        Remove-Item $coreToolsFolder.FullName -Force -Recurse
        
        # Install the Tool
        Write-Host  '##[group]Install "Microsoft Power Apps CLI" from NuGet to: $toolsDir\PAC'
        New-Item $toolsDir\PAC -ItemType Directory -Force
        $msi = "$toolsDir/PAC/powerapps-cli-1.0.msi"
        Invoke-WebRequest -Method Get -uri "https://aka.ms/PowerAppsCLI" -OutFile "$msi"
        
        $arguments = "/i `"$msi`" /quiet /L*v `"$log`""
        Write-Host  "##[command]Install $arguments"
        Start-Process msiexec.exe -ArgumentList $arguments -Wait
        Write-Host  "##[section]Log:"
        Get-Content $log | Write-Host
        Write-Host  '##[endgroup]'

        # Reload the PATH variable
        Write-Host  '##[group]Update PATH Variable'
        Write-Host  "##[command]Reload the PATH variable"
        Write-Host  "##[command]Add PowerAppsCLI to PATH variable"
        [System.Environment]::SetEnvironmentVariable("$($env:LOCALAPPDATA)\Microsoft\PowerAppsCLI\;$($env:Path)", [System.EnvironmentVariableTarget]::User)
        $env:Path = [System.Environment]::GetEnvironmentVariable("Path", [System.EnvironmentVariableTarget]::User)
        Write-Host  "##[command]Check PATH variable:"
        Write-Host  "$(($env:path).split(';') | Write-Host)"
        Write-Host  '##[endgroup]"

        Write-Host  '##[group]Update PowerAppsCLI'
        Write-Host  "##[command]pac install latest"
        pac install latest
        Write-Host  '##[endgroup]'
    
    - name: Tools Bin
      uses: actions/upload-artifact@v2
      with:
        name: Tools-bin-${{ matrix.os }}
        path: ${{ env.TOOLS_BIN }}
        retention-days: 1

